{
  "name": "Primitives",
  "tagline": "Everything you'll ever need to work with Java primitive types!",
  "body": "* Dreaming of a simple way to convert `byte[]` to `int[]`?\r\n\t\r\n\t**How about that:**\r\n\r\n```java\r\n    int[] example = PrIntArray.from(new byte[] { 1, 2, 3 });\r\n```\r\n* You need to concatenate two `char` arrays?\r\n\r\n\t**Nothing easier than that!**\r\n\t\r\n```java\r\n    char[] pt1 = new char[] { 'h', 'e', 'l' };\r\n    char[] pt2 = new char[] { 'l', 'o' };\r\n    char[] result = PrCharArray.concatAll(pt1, pt2);\r\n```\r\n* `String.join()` doesn't work for your `int` array?\r\n\r\n\t**It might not, but the following code sure does!**\r\n\t\r\n```java\r\n    int[] input = new int[]{ 3, 2, 1 };\r\n    String result = PrIntArray.join(\";\", input);\r\n```\r\n\r\n>**Primitives is everything you'll ever need to work with primitive types!**\r\n\r\n## Quick Start\r\n\r\n### Installation\r\n\r\n1. Download the binary jar file from the [latest release on GitHub](https://github.com/Deletescape-Media/Primitives/releases/latest)\r\n* Additionally download the source and/or javadoc jar if needed\r\n* Add the binary jar to your projects classpath\r\n\r\n## Usage\r\n\r\n* [Available Classes](#available-classes)\r\n\t* [Package `ch.deletescape.primitives`](#package-ch-deletescape-primitives)\r\n\t* [Package `ch.deletescape.primitives.arrays`](#package-ch-deletescape-primitives-arrays)\r\n* [Conversions](#conversions)\r\n\t* [`boolean` Conversions](#boolean-conversions)\r\n* [Random](#random)\r\n\t* [Random Arrays](#random-arrays)\r\n* [Array Concatenation](#array-concatenation)\r\n* [Array Joining](#array-joining)\r\n\r\n### Available Classes\r\n\r\n#### Package `ch.deletescape.primitives`\r\n\r\n* `PrBool`\r\n* `PrByte`\r\n* `PrChar`\r\n* `PrDouble`\r\n* `PrFloat`\r\n* `PrInt`\r\n* `PrLong`\r\n* `PrShort`\r\n\r\n#### Package `ch.deletescape.primitives.arrays`\r\n\r\n* `PrBoolArray`\r\n* `PrByteArray`\r\n* `PrCharArray`\r\n* `PrDoubleArray`\r\n* `PrFloatArray`\r\n* `PrIntArray`\r\n* `PrLongArray`\r\n* `PrShortArray`\r\n\r\n### Conversions\r\n\r\nIn the following example an `int` value is converted to `short` using `PrShort`, all other conversions work exactly the same way.\r\n\r\n```java\r\nint i = 1;\r\nshort s = PrShort.from(i);\r\n```\r\n\r\n#### `boolean` Conversions\r\n\r\nConversions from `boolean` return a value of `1` for `true` and a value of `0` for `false`. When converting to `boolean` a value of `1` returns `true`, any other value will result in `false`. The same applies to `boolean[]` conversions.\r\n\r\n### Random\r\n\r\nThe next small code snipped shows how to generate a [pseudorandom](https://en.wikipedia.org/wiki/Pseudorandom) `int` value using `PrInt`, random generation for other primitive types work the same way.\r\n\r\n```java\r\nint i = PrInt.random();\r\n```\r\n\r\n#### Random Arrays\r\n\r\nThe difference when generating an array of random values, for example a `byte` array, is that the size of the array needs to be specified.\r\n\r\n```java\r\nbyte[] ba = PrByteArray.random(5);\r\n```\r\n\r\n### Array Concatenation\r\n\r\nTo concate two or more `boolean` arrays using `PrBoolArray` you can refer to the following piece of code. Array concatenations of other types follow the same pattern.\r\n\r\n```java\r\nboolean[] ba1 = new boolean[] { true, false };\r\nboolean[] ba2 = new boolean[] { false, false };\r\nboolean[] merge = PrBoolArray.concatAll(ba1, ba2);\r\n```\r\n\r\n### Array Joining\r\n\r\nThe following code shows how to easily convert an `int` array to a beautiful `String`, the same way `String.join()` works for `CharSequence` items. This can also be used for arrays of all other types.\r\n\r\n```java\r\nint[] ia = new int[] { 1, 4, 5 };\r\nString str = PrIntArray.join(\"; \", ia);\r\n```\r\n\r\n## License\r\n\r\nMIT License\r\n\r\nCopyright (c) 2016 Deletescape Media\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}